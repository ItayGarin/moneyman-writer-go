name: Go Test

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Golang Tests
    runs-on: ubuntu-latest

    steps:
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21.1'  # Use the version of Go your project requires

    - name: Install Atlas
      run: curl -sSf https://atlasgo.sh | sh

    - name: Check out code
      uses: actions/checkout@v3

    - name: Test
      run: go test ./...
      env:
        GCS_TEST_BUCKET: ${{ secrets.GCS_TEST_BUCKET }}
        GCS_TEST_FILE: ${{ secrets.GCS_TEST_FILE }}
        GCS_TEST_CREDS: ${{ secrets.GCS_TEST_CREDS }}

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      GAR_LOCATION: us-east1-docker.pkg.dev/expenses-407515/moneyman-writer/moneyman-writer
    needs: test

    steps:
    - name: Check Out Repo
      uses: actions/checkout@v2

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GOOGLE_GCS_SERVICE_ACCOUNT_CREDENTIALS }}

    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v1"

    - name: "Get SHA for tag"
      run: echo "IMAGE_TAG=sha-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: "Docker auth"
      run: |-
        gcloud auth configure-docker us-east1-docker.pkg.dev --quiet

    - name: Build image
      run: docker build . --tag ${{ env.GAR_LOCATION }}:${{ env.IMAGE_TAG }}

    - name: Tag as Latest
      run: docker tag ${{ env.GAR_LOCATION }}:${{ env.IMAGE_TAG }} ${{ env.GAR_LOCATION }}:latest

    - name: Push image
      run: |
         docker push ${{ env.GAR_LOCATION }}:${{ env.IMAGE_TAG }}
         docker push ${{ env.GAR_LOCATION }}:latest


// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: query.sql

package sql

import (
	"context"
)

const getTransactions = `-- name: GetTransactions :many
SELECT id, identifier, type, status, date, processed_date, original_amount, original_currency, charged_amount, charged_currency, description, memo, category, account, company_id, hash FROM exp_transactions
`

func (q *Queries) GetTransactions(ctx context.Context) ([]ExpTransaction, error) {
	rows, err := q.db.Query(ctx, getTransactions)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ExpTransaction
	for rows.Next() {
		var i ExpTransaction
		if err := rows.Scan(
			&i.ID,
			&i.Identifier,
			&i.Type,
			&i.Status,
			&i.Date,
			&i.ProcessedDate,
			&i.OriginalAmount,
			&i.OriginalCurrency,
			&i.ChargedAmount,
			&i.ChargedCurrency,
			&i.Description,
			&i.Memo,
			&i.Category,
			&i.Account,
			&i.CompanyID,
			&i.Hash,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
